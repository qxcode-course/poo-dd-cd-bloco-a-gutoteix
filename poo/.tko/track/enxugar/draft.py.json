{
    "patches": [
        {
            "label": "2025-09-24_00-39-24",
            "content": "@@ -1,1349 +0,0 @@\n-class Towel:%0A    def __init__(self, color: str, size: str):%0A        self.color:str = %22red%22%0A        self.size:str = %22p%22%0A        self.wetness:int = 0%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A                print(%22toalha encharcada%22)%0A                self.wetness = self.getMaxWetness()%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    def wringOut(self) -%3E None: %0A        self.wetness = 0%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) -%3E str: %0A        return f%22color:%7Bself.color%7D, tam:%7Bself.size%7D, hum:%7Bself.wetness%7D%22%0A%0A%0Adef main():%0A    toalha = Towel(%22%22, %22%22)%0A    while True:%0A        line: str = input()%0A        print(line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22criar%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A        elif args%5B0%5D == %22mostrar%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        else:%0A            print(%22Comando inv%C3%A1lido!!!!%22)%0Amain()\n",
            "lines": "0"
        },
        {
            "label": "2025-09-24_00-42-20",
            "content": "@@ -898,14 +898,8 @@\n int(\n-%22$%22 + \n line\n@@ -1145,15 +1145,8 @@\n %5D ==\n- %22 $%22 +\n  %22mo\n",
            "lines": "51"
        },
        {
            "label": "2025-09-24_00-43-38",
            "content": "@@ -1301,15 +1301,62 @@\n         \n+else:%0A            print(%22Comando inv%C3%A1lido!!!!%22)\n %0Amain()\n",
            "lines": "51"
        },
        {
            "label": "2025-09-24_00-43-53",
            "content": "@@ -1196,72 +1196,8 @@\n ha)%0A\n-        elif args%5B0%5D == %22seca%22:%0A            print(toalha.isDry)%0A\n     \n",
            "lines": "50"
        },
        {
            "label": "2025-09-24_00-45-31",
            "content": "@@ -1,1401 +1,221 @@\n-class Towel:%0A    def __init__(self, color: str, size: str):%0A        self.color:str = %22red%22%0A        self.size:str = %22p%22%0A        self.wetness:int = 0%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A                print(%22toalha encharcada%22)%0A                self.wetness = self.getMaxWetness()%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    def wringOut(self) -%3E None: %0A        self.wetness = 0%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) -%3E str: %0A        return f%22color:%7Bself.color%7D, tam:%7Bself.size%7D, hum:%7Bself.wetness%7D%22%0A%0A%0Adef main():%0A    toalha = Towel(%22%22, %22%22)%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22criar%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A        elif args%5B0%5D == %22 $%22 + %22mostrar%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22seca%22:%0A            print(%22sim%22 if toalha.isDry() else %22nao%22)%0A        elif args%5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        %0Amain()\n+@@ -1192,16 +1192,80 @@%0A toalha)%250A%0A+        elif args%255B0%255D == %2522seca%2522:%250A            print(toalha.isDry)%250A%0A         %0A@@ -1369,55 +1369,8 @@%0A     %0A-else:%250A            print(%2522Comando inv%25C3%25A1lido!!!!%2522)%0A %250Amai%0A\n",
            "lines": "8"
        },
        {
            "label": "2025-09-24_00-47-58",
            "content": "@@ -1,1405 +1,3813 @@\n-class Towel:%0A    def __init__(self, color: str, size: str):%0A        self.color:str = %22red%22%0A        self.size:str = %22p%22%0A        self.wetness:int = 0%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A                print(%22toalha encharcada%22)%0A                self.wetness = self.getMaxWetness()%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    def wringOut(self) -%3E None: %0A        self.wetness = 0%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) -%3E str: %0A        return f%22Cor: %7Bself.color%7D, Tam:%7Bself.size%7D, Uumidade:%7Bself.wetness%7D%22%0A%0A%0Adef main():%0A    toalha = Towel(%22%22, %22%22)%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22criar%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A        elif args%5B0%5D == %22 $%22 + %22mostrar%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22seca%22:%0A            print(%22sim%22 if toalha.isDry() else %22nao%22)%0A        elif args%5B0%5D == %22dry%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        %0Amain()\n+@@ -1,8 +1,30 @@%0A+@@ -1,1405 +1,161 @@%250A-%0A class To%0A@@ -27,17 +27,19 @@%0A s Towel:%0A-%250A%0A+%25250A%0A     def %0A@@ -76,17 +76,19 @@%0A e: str):%0A-%250A%0A+%25250A%0A         %0A@@ -108,14 +108,20 @@%0A r = %0A-%2522red%2522%250A%0A+%252522red%252522%25250A%0A     %0A@@ -144,12 +144,18 @@%0A r = %0A-%2522p%2522%250A%0A+%252522p%252522%25250A%0A     %0A@@ -174,26 +174,30 @@%0A ness:int = 0%0A-%250A%250A%0A+%25250A%25250A%0A     def dry(%0A@@ -220,16 +220,20 @@%0A t) -%0A-%253E%0A+%25253E%0A  None:%0A-%250A%0A+%25250A%0A     %0A@@ -258,17 +258,19 @@%0A = amount%0A-%250A%0A+%25250A%0A         %0A@@ -285,17 +285,19 @@%0A wetness %0A-%253E%0A+%25253E%0A = self.g%0A@@ -311,17 +311,19 @@%0A tness():%0A-%250A%0A+%25250A%0A         %0A@@ -336,17 +336,19 @@%0A   print(%0A-%2522%0A+%252522%0A toalha e%0A@@ -356,19 +356,23 @@%0A charcada%0A-%2522)%250A%0A+%252522)%25250A%0A         %0A@@ -418,14 +418,18 @@%0A ss()%0A-%250A%0A+%25250A%0A     %0A-%250A%0A+%25250A%0A     %0A@@ -449,16 +449,20 @@%0A f) -%0A-%253E%0A+%25253E%0A  bool:%0A-%250A%0A+%25250A%0A     %0A@@ -489,17 +489,19 @@%0A ess == 0%0A-%250A%0A+%25250A%0A     def %0A@@ -520,17 +520,21 @@%0A f) -%0A-%253E%0A+%25253E%0A  None: %0A-%250A%0A+%25250A%0A     %0A@@ -553,18 +553,22 @@%0A ness = 0%0A-%250A%250A%0A+%25250A%25250A%0A     def %0A@@ -592,15 +592,19 @@%0A f) -%0A-%253E%0A+%25253E%0A  int:%0A-%250A%0A+%25250A%0A     %0A@@ -627,13 +627,19 @@%0A  == %0A-%2522P%2522:%250A%0A+%252522P%252522:%25250A%0A     %0A@@ -655,17 +655,19 @@%0A eturn 10%0A-%250A%0A+%25250A%0A         %0A@@ -686,13 +686,19 @@%0A  == %0A-%2522M%2522:%250A%0A+%252522M%252522:%25250A%0A     %0A@@ -714,17 +714,19 @@%0A eturn 20%0A-%250A%0A+%25250A%0A         %0A@@ -745,13 +745,19 @@%0A  == %0A-%2522G%2522:%250A%0A+%252522G%252522:%25250A%0A     %0A@@ -773,17 +773,19 @@%0A eturn 30%0A-%250A%0A+%25250A%0A         %0A@@ -792,18 +792,22 @@%0A return 0%0A-%250A%250A%0A+%25250A%25250A%0A     def %0A@@ -825,16 +825,20 @@%0A f) -%0A-%253E%0A+%25253E%0A  str: %0A-%250A%0A+%25250A%0A     %0A@@ -853,15 +853,19 @@%0A rn f%0A-%2522%0A+%252522%0A Cor: %0A-%257B%0A+%25257B%0A self%0A@@ -874,16 +874,20 @@%0A olor%0A-%257D%0A+%25257D%0A , Tam:%0A-%257B%0A+%25257B%0A self%0A@@ -891,17 +891,19 @@%0A elf.size%0A-%257D%0A+%25257D%0A , Uumida%0A@@ -909,9 +909,11 @@%0A ade:%0A-%257B%0A+%25257B%0A self%0A@@ -924,13 +924,23 @@%0A ness%0A-%257D%2522%250A%250A%250A%0A+%25257D%252522%25250A%25250A%25250A%0A def %0A@@ -946,17 +946,19 @@%0A  main():%0A-%250A%0A+%25250A%0A     toal%0A@@ -972,16 +972,26 @@%0A wel(%0A-%2522%2522, %2522%2522)%250A%0A+%252522%252522, %252522%252522)%25250A%0A     %0A@@ -1001,17 +1001,19 @@%0A le True:%0A-%250A%0A+%25250A%0A         %0A@@ -1031,17 +1031,19 @@%0A  input()%0A-%250A%0A+%25250A%0A         %0A@@ -1052,19 +1052,23 @@%0A int(%0A-%2522$%2522%0A+%252522$%252522%0A  + line)%0A %250A   %0A@@ -1063,17 +1063,19 @@%0A  + line)%0A-%250A%0A+%25250A%0A         %0A@@ -1088,13 +1088,17 @@%0A list%0A-%255Bstr%255D%0A+%25255Bstr%25255D%0A  = l%0A@@ -1111,14 +1111,22 @@%0A lit(%0A-%2522 %2522)%250A%250A%0A+%252522 %252522)%25250A%25250A%0A     %0A@@ -1140,22 +1140,32 @@%0A args%0A-%255B0%255D == %2522end%2522:%250A%0A+%25255B0%25255D == %252522end%252522:%25250A%0A     %0A@@ -1177,17 +1177,19 @@%0A    break%0A-%250A%0A+%25250A%0A         %0A@@ -1201,24 +1201,34 @@%0A args%0A-%255B0%255D%0A+%25255B0%25255D%0A  == %0A-%2522%0A+%252522%0A criar%0A-%2522:%250A%0A+%252522:%25250A%0A     %0A@@ -1251,12 +1251,18 @@%0A args%0A-%255B1%255D%250A%0A+%25255B1%25255D%25250A%0A     %0A@@ -1284,12 +1284,18 @@%0A args%0A-%255B2%255D%250A%0A+%25255B2%25255D%25250A%0A     %0A@@ -1329,17 +1329,19 @@%0A r, size)%0A-%250A%0A+%25250A%0A         %0A@@ -1353,33 +1353,47 @@%0A args%0A-%255B0%255D == %2522 $%2522 + %2522mostrar%2522:%250A%0A+%25255B0%25255D == %252522 $%252522 + %252522mostrar%252522:%25250A%0A     %0A@@ -1413,17 +1413,19 @@%0A (toalha)%0A-%250A%0A+%25250A%0A         %0A@@ -1437,23 +1437,33 @@%0A args%0A-%255B0%255D%0A+%25255B0%25255D%0A  == %0A-%2522%0A+%252522%0A seca%0A-%2522:%250A%0A+%252522:%25250A%0A     %0A@@ -1480,13 +1480,17 @@%0A int(%0A-%2522sim%2522%0A+%252522sim%252522%0A  if %0A@@ -1513,15 +1513,21 @@%0A lse %0A-%2522nao%2522)%250A%0A+%252522nao%252522)%25250A%0A     %0A@@ -1543,22 +1543,32 @@%0A args%0A-%255B0%255D == %2522dry%2522:%250A%0A+%25255B0%25255D == %252522dry%252522:%25250A%0A     %0A@@ -1601,13 +1601,19 @@%0A args%0A-%255B1%255D)%250A%0A+%25255B1%25255D)%25250A%0A     %0A@@ -1642,17 +1642,19 @@%0A unt)%0A-%250A%0A+%25250A%0A         %0A %250Amai%0A@@ -1653,11 +1653,227 @@%0A     %0A-%250A%0A+%25250A%0A main()%0A+%250A+@@ -742,13 +742,14 @@%25250A n f%25252522%25250A-C%25250A+col%25250A or:%25250A- %25250A %2525257Bsel%25250A@@ -758,17 +758,17 @@%25250A color%2525257D, %25250A-T%25250A+t%25250A am:%2525257Bself%25250A@@ -779,16 +779,11 @@%25250A e%2525257D, %25250A-U%25250A+h%25250A um%25250A-idade%25250A :%2525257Bse%25250A%250A%0A\n",
            "lines": "307"
        },
        {
            "label": "2025-09-24_00-49-45",
            "content": "@@ -801,17 +801,16 @@\n ess%7D%22%0A%0A%0A\n-%0A\n def main\n",
            "lines": "52"
        },
        {
            "label": "2025-09-24_00-50-37",
            "content": "@@ -761,17 +761,16 @@\n r%7D, Tam:\n- \n %7Bself.si\n@@ -779,16 +779,16 @@\n %7D, U\n+u\n midade:\n- \n %7Bsel\n",
            "lines": "53"
        },
        {
            "label": "2025-09-24_00-51-25",
            "content": "@@ -1202,76 +1202,8 @@\n ha)%0A\n-        elif args%5B0%5D == %22torcer%22:%0A                toalha.wringOut()%0A\n     \n@@ -1313,15 +1313,11 @@\n == %22\n-enxugar\n+dry\n %22:%0A \n",
            "lines": "53"
        },
        {
            "label": "2025-09-24_00-55-34",
            "content": "@@ -1461,67 +1461,8 @@\n nt)%0A\n-        else:%0A            print(%22fail: comando inv%C3%A1lido!%22)%0A\n     \n",
            "lines": "55"
        },
        {
            "label": "2025-09-24_00-56-31",
            "content": "@@ -1,1534 +1,160 @@\n-class Towel:%0A    def __init__(self, color: str, size: str):%0A        self.color:str = %22azul%22%0A        self.size:str = %22P%22%0A        self.wetness:int = 0%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E= self.getMaxWetness():%0A                print(%22toalha encharcada%22)%0A                self.wetness = self.getMaxWetness()%0A    %0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    def wringOut(self) -%3E None: %0A        self.wetness = 0%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A            return 10%0A        if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A%0A    def __str__(self) -%3E str: %0A        return f%22Cor: %7Bself.color%7D, Tam: %7Bself.size%7D, Umidade: %7Bself.wetness%7D%22%0A%0A%0Adef main():%0A    toalha = Towel(%22%22, %22%22)%0A    while True:%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22criar%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A        elif args%5B0%5D == %22 $%22 + %22mostrar%22:%0A            print(toalha)%0A        elif args%5B0%5D == %22torcer%22:%0A            toalha.wringOut()%0A        elif args%5B0%5D == %22seca%22:%0A            print(%22sim%22 if toalha.isDry() else %22nao%22)%0A        elif args%5B0%5D == %22enxugar%22:%0A            amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A        else:%0A            print(%22fail: comando inv%C3%A1lido!%22)%0A        %0Amain()\n+@@ -83,12 +83,11 @@%0A  = %2522%0A-azul%0A+red%0A %2522%250A  %0A@@ -109,17 +109,17 @@%0A :str = %2522%0A-P%0A+p%0A %2522%250A      %0A@@ -802,16 +802,17 @@%0A ess%257D%2522%250A%250A%250A%0A+%250A%0A def main%0A\n",
            "lines": "14"
        },
        {
            "label": "2025-09-24_01-00-34",
            "content": "@@ -75,16 +75,21 @@\n olor\n- = color\n+:str = %22azul%22\n %0A   \n@@ -106,15 +106,18 @@\n size\n- = size\n+:str = %22P%22\n %0A   \n@@ -125,32 +125,36 @@\n     self.wetness\n+:int\n  = 0%0A%0A    def dr\n@@ -271,24 +271,28 @@\n             \n+    \n print(%22toalh\n@@ -306,16 +306,20 @@\n rcada%22)%0A\n+    \n         \n@@ -421,25 +421,24 @@\n etness == 0%0A\n-%0A\n     def wrin\n@@ -828,20 +828,29 @@\n oalha = \n-None\n+Towel(%22%22, %22%22)\n %0A    whi\n@@ -1130,16 +1130,16 @@\n , size)%0A\n-\n         \n@@ -1153,16 +1153,23 @@\n gs%5B0%5D ==\n+ %22 $%22 +\n  %22mostra\n",
            "lines": "56"
        },
        {
            "label": "2025-09-24_01-05-18",
            "content": "@@ -75,21 +75,16 @@\n olor\n-:str = %22azul%22\n+ = color\n %0A   \n@@ -101,18 +101,15 @@\n size\n-:str = %22P%22\n+ = size\n %0A   \n@@ -129,12 +129,8 @@\n ness\n-:int\n  = 0\n@@ -259,28 +259,24 @@\n             \n-    \n print(%22toalh\n@@ -290,20 +290,16 @@\n rcada%22)%0A\n-    \n         \n@@ -405,16 +405,17 @@\n ss == 0%0A\n+%0A\n     def \n@@ -813,21 +813,12 @@\n a = \n-Towel(%22%22, %22%22)\n+None\n %0A   \n@@ -1102,16 +1102,16 @@\n , size)%0A\n+\n         \n@@ -1129,15 +1129,8 @@\n %5D ==\n- %22 $%22 +\n  %22mo\n",
            "lines": "57"
        },
        {
            "label": "2025-09-24_01-07-51",
            "content": "@@ -9,16 +9,8 @@\n wel:\n-  # this\n %0A   \n@@ -56,23 +56,8 @@\n tr):\n-  # constructor\n %0A   \n@@ -76,33 +76,20 @@\n lor:\n- \n str = \n-color  # atributos\n+%22azul%22\n %0A   \n@@ -107,19 +107,17 @@\n ize:\n- \n str = \n-size\n+%22P%22\n %0A   \n@@ -134,17 +134,16 @@\n wetness:\n- \n int = 0%0A\n@@ -271,24 +271,28 @@\n             \n+    \n print(%22toalh\n@@ -306,16 +306,20 @@\n rcada%22)%0A\n+    \n         \n@@ -425,21 +425,16 @@\n ss == 0%0A\n-    %0A\n     def \n@@ -725,19 +725,8 @@\n tr: \n- # toString\n %0A   \n@@ -743,16 +743,17 @@\n n f%22Cor:\n+ \n %7Bself.co\n@@ -762,16 +762,17 @@\n r%7D, Tam:\n+ \n %7Bself.si\n@@ -784,16 +784,17 @@\n Umidade:\n+ \n %7Bself.we\n@@ -1130,16 +1130,16 @@\n , size)%0A\n-\n         \n@@ -1153,16 +1153,23 @@\n gs%5B0%5D ==\n+ %22 $%22 +\n  %22mostra\n",
            "lines": "56"
        },
        {
            "label": "2025-09-24_01-11-47",
            "content": "@@ -109,16 +109,27 @@\n  color  \n+# atributos\n %0A       \n@@ -758,16 +758,26 @@\n %3E str:  \n+# toString\n %0A       \n@@ -790,17 +790,16 @@\n n f%22Cor:\n- \n %7Bself.co\n@@ -808,17 +808,16 @@\n r%7D, Tam:\n- \n %7Bself.si\n@@ -829,17 +829,16 @@\n Umidade:\n- \n %7Bself.we\n",
            "lines": "57"
        },
        {
            "label": "2025-09-24_01-12-49",
            "content": "@@ -791,12 +791,8 @@\n  Tam\n-anho\n : %7Bs\n",
            "lines": "57"
        },
        {
            "label": "2025-09-24_01-13-12",
            "content": "@@ -7,16 +7,22 @@\n Towel:  \n+# this\n %0A    def\n@@ -61,16 +61,30 @@\n : str): \n+ # constructor\n %0A       \n",
            "lines": "57"
        },
        {
            "label": "2025-09-28_20-56-30",
            "content": "class Towel:  \n    def __init__(self, color: str, size: str): \n        self.color: str = color  \n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n    \n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def wringOut(self) -> None: \n        self.wetness = 0\n\n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\n    def __str__(self) -> str:  \n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n\n\ndef main():\n    toalha = Towel(\"\", \"\")\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"criar\":\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size)\n        elif args[0] == \"mostrar\":\n            print(toalha)\n        elif args[0] == \"torcer\":\n            toalha.wringOut()\n        elif args[0] == \"seca\":\n            print(\"sim\" if toalha.isDry() else \"nao\")\n        elif args[0] == \"enxugar\":\n            amount: int = int(args[1])\n            toalha.dry(amount)\n        else:\n            print(\"fail: comando inv\u00e1lido!\")\n        \nmain()",
            "lines": "57"
        }
    ]
}